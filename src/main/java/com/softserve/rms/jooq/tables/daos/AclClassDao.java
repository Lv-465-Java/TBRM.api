/*
 * This file is generated by jOOQ.
 */
package com.softserve.rms.jooq.tables.daos;


import com.softserve.rms.jooq.tables.AclClass;
import com.softserve.rms.jooq.tables.records.AclClassRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AclClassDao extends DAOImpl<AclClassRecord, com.softserve.rms.jooq.tables.pojos.AclClass, Long> {

    /**
     * Create a new AclClassDao without any configuration
     */
    public AclClassDao() {
        super(AclClass.ACL_CLASS, com.softserve.rms.jooq.tables.pojos.AclClass.class);
    }

    /**
     * Create a new AclClassDao with an attached configuration
     */
    public AclClassDao(Configuration configuration) {
        super(AclClass.ACL_CLASS, com.softserve.rms.jooq.tables.pojos.AclClass.class, configuration);
    }

    @Override
    public Long getId(com.softserve.rms.jooq.tables.pojos.AclClass object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.softserve.rms.jooq.tables.pojos.AclClass> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AclClass.ACL_CLASS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.softserve.rms.jooq.tables.pojos.AclClass> fetchById(Long... values) {
        return fetch(AclClass.ACL_CLASS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.softserve.rms.jooq.tables.pojos.AclClass fetchOneById(Long value) {
        return fetchOne(AclClass.ACL_CLASS.ID, value);
    }

    /**
     * Fetch records that have <code>class BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.softserve.rms.jooq.tables.pojos.AclClass> fetchRangeOfClass(String lowerInclusive, String upperInclusive) {
        return fetchRange(AclClass.ACL_CLASS.CLASS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>class IN (values)</code>
     */
    public List<com.softserve.rms.jooq.tables.pojos.AclClass> fetchByClass(String... values) {
        return fetch(AclClass.ACL_CLASS.CLASS, values);
    }

    /**
     * Fetch a unique record that has <code>class = value</code>
     */
    public com.softserve.rms.jooq.tables.pojos.AclClass fetchOneByClass(String value) {
        return fetchOne(AclClass.ACL_CLASS.CLASS, value);
    }
}

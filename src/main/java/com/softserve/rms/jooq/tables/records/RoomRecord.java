/*
 * This file is generated by jOOQ.
 */
package com.softserve.rms.jooq.tables.records;


import com.softserve.rms.jooq.tables.Room;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoomRecord extends UpdatableRecordImpl<RoomRecord> implements Record5<Long, String, String, Integer, Integer> {

    private static final long serialVersionUID = -1729504576;

    /**
     * Setter for <code>public.room.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.room.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.room.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.room.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.room.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.room.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.room.number</code>.
     */
    public void setNumber(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.room.number</code>.
     */
    public Integer getNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.room.testint</code>.
     */
    public void setTestint(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.room.testint</code>.
     */
    public Integer getTestint() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Room.ROOM.ID;
    }

    @Override
    public Field<String> field2() {
        return Room.ROOM.NAME;
    }

    @Override
    public Field<String> field3() {
        return Room.ROOM.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Room.ROOM.NUMBER;
    }

    @Override
    public Field<Integer> field5() {
        return Room.ROOM.TESTINT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getNumber();
    }

    @Override
    public Integer component5() {
        return getTestint();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getNumber();
    }

    @Override
    public Integer value5() {
        return getTestint();
    }

    @Override
    public RoomRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RoomRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoomRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public RoomRecord value4(Integer value) {
        setNumber(value);
        return this;
    }

    @Override
    public RoomRecord value5(Integer value) {
        setTestint(value);
        return this;
    }

    @Override
    public RoomRecord values(Long value1, String value2, String value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoomRecord
     */
    public RoomRecord() {
        super(Room.ROOM);
    }

    /**
     * Create a detached, initialised RoomRecord
     */
    public RoomRecord(Long id, String name, String description, Integer number, Integer testint) {
        super(Room.ROOM);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, number);
        set(4, testint);
    }
}

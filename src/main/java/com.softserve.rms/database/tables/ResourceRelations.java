/*
 * This file is generated by jOOQ.
 */
package database.tables;


import database.Indexes;
import database.Keys;
import database.Public;
import database.tables.records.ResourceRelationsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceRelations extends TableImpl<ResourceRelationsRecord> {

    private static final long serialVersionUID = -1928733951;

    /**
     * The reference instance of <code>public.resource_relations</code>
     */
    public static final ResourceRelations RESOURCE_RELATIONS = new ResourceRelations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceRelationsRecord> getRecordType() {
        return ResourceRelationsRecord.class;
    }

    /**
     * The column <code>public.resource_relations.id</code>.
     */
    public final TableField<ResourceRelationsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('resource_relations_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.resource_relations.related_resource_template_id</code>.
     */
    public final TableField<ResourceRelationsRecord, Long> RELATED_RESOURCE_TEMPLATE_ID = createField(DSL.name("related_resource_template_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.resource_relations.resource_parameter_id</code>.
     */
    public final TableField<ResourceRelationsRecord, Long> RESOURCE_PARAMETER_ID = createField(DSL.name("resource_parameter_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.resource_relations</code> table reference
     */
    public ResourceRelations() {
        this(DSL.name("resource_relations"), null);
    }

    /**
     * Create an aliased <code>public.resource_relations</code> table reference
     */
    public ResourceRelations(String alias) {
        this(DSL.name(alias), RESOURCE_RELATIONS);
    }

    /**
     * Create an aliased <code>public.resource_relations</code> table reference
     */
    public ResourceRelations(Name alias) {
        this(alias, RESOURCE_RELATIONS);
    }

    private ResourceRelations(Name alias, Table<ResourceRelationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceRelations(Name alias, Table<ResourceRelationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ResourceRelations(Table<O> child, ForeignKey<O, ResourceRelationsRecord> key) {
        super(child, key, RESOURCE_RELATIONS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESOURCE_RELATIONS_PKEY);
    }

    @Override
    public Identity<ResourceRelationsRecord, Long> getIdentity() {
        return Keys.IDENTITY_RESOURCE_RELATIONS;
    }

    @Override
    public UniqueKey<ResourceRelationsRecord> getPrimaryKey() {
        return Keys.RESOURCE_RELATIONS_PKEY;
    }

    @Override
    public List<UniqueKey<ResourceRelationsRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourceRelationsRecord>>asList(Keys.RESOURCE_RELATIONS_PKEY);
    }

    @Override
    public ResourceRelations as(String alias) {
        return new ResourceRelations(DSL.name(alias), this);
    }

    @Override
    public ResourceRelations as(Name alias) {
        return new ResourceRelations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceRelations rename(String name) {
        return new ResourceRelations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceRelations rename(Name name) {
        return new ResourceRelations(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}

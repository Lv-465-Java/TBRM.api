/*
 * This file is generated by jOOQ.
 */
package database.tables.records;


import database.tables.S3bucketTest;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S3bucketTestRecord extends UpdatableRecordImpl<S3bucketTestRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 231046906;

    /**
     * Setter for <code>public.s3bucket_test.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.s3bucket_test.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.s3bucket_test.file_name</code>.
     */
    public void setFileName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.s3bucket_test.file_name</code>.
     */
    public String getFileName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.s3bucket_test.resource_name</code>.
     */
    public void setResourceName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.s3bucket_test.resource_name</code>.
     */
    public String getResourceName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return S3bucketTest.S3BUCKET_TEST.ID;
    }

    @Override
    public Field<String> field2() {
        return S3bucketTest.S3BUCKET_TEST.FILE_NAME;
    }

    @Override
    public Field<String> field3() {
        return S3bucketTest.S3BUCKET_TEST.RESOURCE_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFileName();
    }

    @Override
    public String component3() {
        return getResourceName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFileName();
    }

    @Override
    public String value3() {
        return getResourceName();
    }

    @Override
    public S3bucketTestRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public S3bucketTestRecord value2(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public S3bucketTestRecord value3(String value) {
        setResourceName(value);
        return this;
    }

    @Override
    public S3bucketTestRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S3bucketTestRecord
     */
    public S3bucketTestRecord() {
        super(S3bucketTest.S3BUCKET_TEST);
    }

    /**
     * Create a detached, initialised S3bucketTestRecord
     */
    public S3bucketTestRecord(Long id, String fileName, String resourceName) {
        super(S3bucketTest.S3BUCKET_TEST);

        set(0, id);
        set(1, fileName);
        set(2, resourceName);
    }
}

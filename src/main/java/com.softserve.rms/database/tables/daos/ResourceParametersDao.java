/*
 * This file is generated by jOOQ.
 */
package database.tables.daos;


import database.tables.ResourceParameters;
import database.tables.records.ResourceParametersRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceParametersDao extends DAOImpl<ResourceParametersRecord, database.tables.pojos.ResourceParameters, Long> {

    /**
     * Create a new ResourceParametersDao without any configuration
     */
    public ResourceParametersDao() {
        super(ResourceParameters.RESOURCE_PARAMETERS, database.tables.pojos.ResourceParameters.class);
    }

    /**
     * Create a new ResourceParametersDao with an attached configuration
     */
    public ResourceParametersDao(Configuration configuration) {
        super(ResourceParameters.RESOURCE_PARAMETERS, database.tables.pojos.ResourceParameters.class, configuration);
    }

    @Override
    public Long getId(database.tables.pojos.ResourceParameters object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ResourceParameters.RESOURCE_PARAMETERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchById(Long... values) {
        return fetch(ResourceParameters.RESOURCE_PARAMETERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public database.tables.pojos.ResourceParameters fetchOneById(Long value) {
        return fetchOne(ResourceParameters.RESOURCE_PARAMETERS.ID, value);
    }

    /**
     * Fetch records that have <code>column_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchRangeOfColumnName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceParameters.RESOURCE_PARAMETERS.COLUMN_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>column_name IN (values)</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchByColumnName(String... values) {
        return fetch(ResourceParameters.RESOURCE_PARAMETERS.COLUMN_NAME, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceParameters.RESOURCE_PARAMETERS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchByName(String... values) {
        return fetch(ResourceParameters.RESOURCE_PARAMETERS.NAME, values);
    }

    /**
     * Fetch records that have <code>field_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchRangeOfFieldType(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceParameters.RESOURCE_PARAMETERS.FIELD_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>field_type IN (values)</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchByFieldType(String... values) {
        return fetch(ResourceParameters.RESOURCE_PARAMETERS.FIELD_TYPE, values);
    }

    /**
     * Fetch records that have <code>pattern BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchRangeOfPattern(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceParameters.RESOURCE_PARAMETERS.PATTERN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pattern IN (values)</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchByPattern(String... values) {
        return fetch(ResourceParameters.RESOURCE_PARAMETERS.PATTERN, values);
    }

    /**
     * Fetch records that have <code>resource_template_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchRangeOfResourceTemplateId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ResourceParameters.RESOURCE_PARAMETERS.RESOURCE_TEMPLATE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>resource_template_id IN (values)</code>
     */
    public List<database.tables.pojos.ResourceParameters> fetchByResourceTemplateId(Long... values) {
        return fetch(ResourceParameters.RESOURCE_PARAMETERS.RESOURCE_TEMPLATE_ID, values);
    }
}

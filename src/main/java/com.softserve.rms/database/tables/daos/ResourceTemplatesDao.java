/*
 * This file is generated by jOOQ.
 */
package database.tables.daos;


import database.tables.ResourceTemplates;
import database.tables.records.ResourceTemplatesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceTemplatesDao extends DAOImpl<ResourceTemplatesRecord, database.tables.pojos.ResourceTemplates, Long> {

    /**
     * Create a new ResourceTemplatesDao without any configuration
     */
    public ResourceTemplatesDao() {
        super(ResourceTemplates.RESOURCE_TEMPLATES, database.tables.pojos.ResourceTemplates.class);
    }

    /**
     * Create a new ResourceTemplatesDao with an attached configuration
     */
    public ResourceTemplatesDao(Configuration configuration) {
        super(ResourceTemplates.RESOURCE_TEMPLATES, database.tables.pojos.ResourceTemplates.class, configuration);
    }

    @Override
    public Long getId(database.tables.pojos.ResourceTemplates object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ResourceTemplates.RESOURCE_TEMPLATES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchById(Long... values) {
        return fetch(ResourceTemplates.RESOURCE_TEMPLATES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public database.tables.pojos.ResourceTemplates fetchOneById(Long value) {
        return fetchOne(ResourceTemplates.RESOURCE_TEMPLATES.ID, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceTemplates.RESOURCE_TEMPLATES.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchByDescription(String... values) {
        return fetch(ResourceTemplates.RESOURCE_TEMPLATES.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>is_published BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchRangeOfIsPublished(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(ResourceTemplates.RESOURCE_TEMPLATES.IS_PUBLISHED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_published IN (values)</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchByIsPublished(Boolean... values) {
        return fetch(ResourceTemplates.RESOURCE_TEMPLATES.IS_PUBLISHED, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceTemplates.RESOURCE_TEMPLATES.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchByName(String... values) {
        return fetch(ResourceTemplates.RESOURCE_TEMPLATES.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public database.tables.pojos.ResourceTemplates fetchOneByName(String value) {
        return fetchOne(ResourceTemplates.RESOURCE_TEMPLATES.NAME, value);
    }

    /**
     * Fetch records that have <code>table_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchRangeOfTableName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ResourceTemplates.RESOURCE_TEMPLATES.TABLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>table_name IN (values)</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchByTableName(String... values) {
        return fetch(ResourceTemplates.RESOURCE_TEMPLATES.TABLE_NAME, values);
    }

    /**
     * Fetch records that have <code>creator_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchRangeOfCreatorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ResourceTemplates.RESOURCE_TEMPLATES.CREATOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_id IN (values)</code>
     */
    public List<database.tables.pojos.ResourceTemplates> fetchByCreatorId(Long... values) {
        return fetch(ResourceTemplates.RESOURCE_TEMPLATES.CREATOR_ID, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package database.tables.daos;


import database.tables.AclObjectIdentity;
import database.tables.records.AclObjectIdentityRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AclObjectIdentityDao extends DAOImpl<AclObjectIdentityRecord, database.tables.pojos.AclObjectIdentity, Long> {

    /**
     * Create a new AclObjectIdentityDao without any configuration
     */
    public AclObjectIdentityDao() {
        super(AclObjectIdentity.ACL_OBJECT_IDENTITY, database.tables.pojos.AclObjectIdentity.class);
    }

    /**
     * Create a new AclObjectIdentityDao with an attached configuration
     */
    public AclObjectIdentityDao(Configuration configuration) {
        super(AclObjectIdentity.ACL_OBJECT_IDENTITY, database.tables.pojos.AclObjectIdentity.class, configuration);
    }

    @Override
    public Long getId(database.tables.pojos.AclObjectIdentity object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AclObjectIdentity.ACL_OBJECT_IDENTITY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchById(Long... values) {
        return fetch(AclObjectIdentity.ACL_OBJECT_IDENTITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public database.tables.pojos.AclObjectIdentity fetchOneById(Long value) {
        return fetchOne(AclObjectIdentity.ACL_OBJECT_IDENTITY.ID, value);
    }

    /**
     * Fetch records that have <code>object_id_class BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchRangeOfObjectIdClass(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AclObjectIdentity.ACL_OBJECT_IDENTITY.OBJECT_ID_CLASS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>object_id_class IN (values)</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchByObjectIdClass(Long... values) {
        return fetch(AclObjectIdentity.ACL_OBJECT_IDENTITY.OBJECT_ID_CLASS, values);
    }

    /**
     * Fetch records that have <code>object_id_identity BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchRangeOfObjectIdIdentity(String lowerInclusive, String upperInclusive) {
        return fetchRange(AclObjectIdentity.ACL_OBJECT_IDENTITY.OBJECT_ID_IDENTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>object_id_identity IN (values)</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchByObjectIdIdentity(String... values) {
        return fetch(AclObjectIdentity.ACL_OBJECT_IDENTITY.OBJECT_ID_IDENTITY, values);
    }

    /**
     * Fetch records that have <code>parent_object BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchRangeOfParentObject(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AclObjectIdentity.ACL_OBJECT_IDENTITY.PARENT_OBJECT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent_object IN (values)</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchByParentObject(Long... values) {
        return fetch(AclObjectIdentity.ACL_OBJECT_IDENTITY.PARENT_OBJECT, values);
    }

    /**
     * Fetch records that have <code>owner_sid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchRangeOfOwnerSid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AclObjectIdentity.ACL_OBJECT_IDENTITY.OWNER_SID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner_sid IN (values)</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchByOwnerSid(Long... values) {
        return fetch(AclObjectIdentity.ACL_OBJECT_IDENTITY.OWNER_SID, values);
    }

    /**
     * Fetch records that have <code>entries_inheriting BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchRangeOfEntriesInheriting(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(AclObjectIdentity.ACL_OBJECT_IDENTITY.ENTRIES_INHERITING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>entries_inheriting IN (values)</code>
     */
    public List<database.tables.pojos.AclObjectIdentity> fetchByEntriesInheriting(Boolean... values) {
        return fetch(AclObjectIdentity.ACL_OBJECT_IDENTITY.ENTRIES_INHERITING, values);
    }
}
